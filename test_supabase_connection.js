// Script para testar conex√£o com Supabase
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ponxumxwjodpgwhepwxc.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBvbnh1bXh3am9kcGd3aGVwd3hjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU0NTE4NTIsImV4cCI6MjA3MTAyNzg1Mn0.J43LGwbU8tQ8_xe3ua4ddb-HTFLsWXoR7R1MVIS3SdE';

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

async function testConnection() {
  console.log('üîç Testando conex√£o com Supabase...');
  
  try {
    // Teste 1: Verificar se a API est√° respondendo
    console.log('üì° Testando API REST...');
    const { data: healthCheck, error: healthError } = await supabase
      .from('lembretes')
      .select('count', { count: 'exact', head: true });
    
    if (healthError) {
      console.error('‚ùå Erro na API REST:', healthError);
    } else {
      console.log('‚úÖ API REST funcionando');
    }

    // Teste 2: Verificar autentica√ß√£o
    console.log('üîê Testando autentica√ß√£o...');
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    
    if (authError) {
      console.error('‚ùå Erro de autentica√ß√£o:', authError);
    } else {
      console.log('‚úÖ Autentica√ß√£o funcionando, usu√°rio:', user?.id || 'n√£o logado');
    }

    // Teste 3: Verificar se a tabela lembretes existe
    console.log('üìã Testando tabela lembretes...');
    const { data: lembretes, error: tableError } = await supabase
      .from('lembretes')
      .select('*')
      .limit(1);
    
    if (tableError) {
      console.error('‚ùå Erro na tabela lembretes:', tableError);
    } else {
      console.log('‚úÖ Tabela lembretes acess√≠vel, registros encontrados:', lembretes?.length || 0);
    }

  } catch (error) {
    console.error('üí• Erro geral:', error);
  }
}

testConnection();